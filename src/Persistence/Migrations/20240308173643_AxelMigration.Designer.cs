// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AxelDbContext))]
    [Migration("20240308173643_AxelMigration")]
    partial class AxelMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2");

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StoreProductProductId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StoreProductStoreId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StoreProductProductId", "StoreProductStoreId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("817460e9-a1a2-47a4-a9f6-b0afa5c3ebd9"),
                            Address = "Av. El Uruguay 452",
                            Name = "Tienda de Electrodomesticos"
                        },
                        new
                        {
                            Id = new Guid("c2f51688-1c31-4ef2-a380-692d89bfd1f3"),
                            Address = "Av. El Paso 100",
                            Name = "Tienda de Burguers"
                        });
                });

            modelBuilder.Entity("Domain.StoreProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreProduct");
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.HasOne("Domain.StoreProduct", null)
                        .WithMany("Products")
                        .HasForeignKey("StoreProductProductId", "StoreProductStoreId");
                });

            modelBuilder.Entity("Domain.StoreProduct", b =>
                {
                    b.HasOne("Domain.Product", "Product")
                        .WithMany("StoreProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Store", "Store")
                        .WithMany("StoreProducts")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Navigation("StoreProducts");
                });

            modelBuilder.Entity("Domain.Store", b =>
                {
                    b.Navigation("StoreProducts");
                });

            modelBuilder.Entity("Domain.StoreProduct", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
